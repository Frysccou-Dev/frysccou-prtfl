---
---

<div class="relative language-selector">
  <button 
    id="language-toggle"
    class="flex items-center gap-2 px-3 py-2 text-white hover:text-blue-300 transition-colors text-xs sm:text-sm font-medium rounded-lg hover:bg-white/10"
    aria-label="Change Language"
  >
    <span id="current-flag" class="text-base">ðŸ‡ºðŸ‡¸</span>
    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
    </svg>
  </button>
  
  <div 
    id="language-dropdown"
    class="absolute left-0 bottom-12 w-36 bg-white rounded-lg shadow-lg border border-gray-200 opacity-0 invisible transform scale-95 transition-all duration-200 z-50"
  >
    <div class="py-2">
      <button 
        data-lang="en"
        class="language-option w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-100 transition-colors flex items-center gap-3"
      >
        <span class="text-base">ðŸ‡ºðŸ‡¸</span>
        <span class="text-sm">English</span>
      </button>
      <button 
        data-lang="es"
        class="language-option w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-100 transition-colors flex items-center gap-3"
      >
        <span class="text-base">ðŸ‡ªðŸ‡¸</span>
        <span class="text-sm">EspaÃ±ol</span>
      </button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const toggle = document.getElementById('language-toggle');
    const dropdown = document.getElementById('language-dropdown');
    const currentFlag = document.getElementById('current-flag');
    const languageOptions = document.querySelectorAll('.language-option');

    function updateFlag() {
      const currentPath = window.location.pathname;
      if (currentPath.startsWith('/es') && currentFlag) {
        currentFlag.textContent = 'ðŸ‡ªðŸ‡¸';
      } else if (currentFlag) {
        currentFlag.textContent = 'ðŸ‡ºðŸ‡¸';
      }
    }

    updateFlag();

    toggle?.addEventListener('click', () => {
      const isVisible = dropdown?.classList.contains('opacity-100');
      
      if (isVisible) {
        dropdown?.classList.remove('opacity-100', 'visible', 'scale-100');
        dropdown?.classList.add('opacity-0', 'invisible', 'scale-95');
      } else {
        dropdown?.classList.remove('opacity-0', 'invisible', 'scale-95');
        dropdown?.classList.add('opacity-100', 'visible', 'scale-100');
      }
    });

    document.addEventListener('click', (e) => {
      if (!toggle?.contains(e.target) && !dropdown?.contains(e.target)) {
        dropdown?.classList.remove('opacity-100', 'visible', 'scale-100');
        dropdown?.classList.add('opacity-0', 'invisible', 'scale-95');
      }
    });

    languageOptions.forEach(option => {
      option.addEventListener('click', () => {
        const lang = option.getAttribute('data-lang');
        const flag = option.querySelector('span')?.textContent;
        
        if (lang && flag && currentFlag) {
          currentFlag.textContent = flag;
          
          dropdown?.classList.remove('opacity-100', 'visible', 'scale-100');
          dropdown?.classList.add('opacity-0', 'invisible', 'scale-95');
          
          const currentPath = window.location.pathname;
          let newPath = currentPath;
          
          if (lang === 'es') {
            if (!currentPath.startsWith('/es')) {
              newPath = currentPath === '/' ? '/es/' : `/es${currentPath}`;
            }
          } else {
            if (currentPath.startsWith('/es')) {
              newPath = currentPath === '/es/' ? '/' : currentPath.substring(3);
            }
          }
          
          if (newPath !== currentPath) {
            window.location.href = newPath;
          }
        }
      });
    });
  });
</script>
